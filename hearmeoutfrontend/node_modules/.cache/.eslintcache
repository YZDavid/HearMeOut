[{"/Users/davidsonchua/GitHub/HearMeOut/HearMeOut/hearmeoutfrontend/src/index.js":"1","/Users/davidsonchua/GitHub/HearMeOut/HearMeOut/hearmeoutfrontend/src/App.js":"2","/Users/davidsonchua/GitHub/HearMeOut/HearMeOut/hearmeoutfrontend/src/auth/store.js":"3","/Users/davidsonchua/GitHub/HearMeOut/HearMeOut/hearmeoutfrontend/src/components/AuthRoute.js":"4","/Users/davidsonchua/GitHub/HearMeOut/HearMeOut/hearmeoutfrontend/src/pages/Dashboard.js":"5","/Users/davidsonchua/GitHub/HearMeOut/HearMeOut/hearmeoutfrontend/src/pages/Login.js":"6","/Users/davidsonchua/GitHub/HearMeOut/HearMeOut/hearmeoutfrontend/src/components/BasicRoute.js":"7","/Users/davidsonchua/GitHub/HearMeOut/HearMeOut/hearmeoutfrontend/src/pages/Home.js":"8","/Users/davidsonchua/GitHub/HearMeOut/HearMeOut/hearmeoutfrontend/src/components/Styles.js":"9","/Users/davidsonchua/GitHub/HearMeOut/HearMeOut/hearmeoutfrontend/src/pages/Convert.js":"10","/Users/davidsonchua/GitHub/HearMeOut/HearMeOut/hearmeoutfrontend/src/pages/Signup.js":"11","/Users/davidsonchua/GitHub/HearMeOut/HearMeOut/hearmeoutfrontend/src/auth/reducers/rootReducer.js":"12","/Users/davidsonchua/GitHub/HearMeOut/HearMeOut/hearmeoutfrontend/src/components/FormLib1.js":"13","/Users/davidsonchua/GitHub/HearMeOut/HearMeOut/hearmeoutfrontend/src/components/Styles1.js":"14","/Users/davidsonchua/GitHub/HearMeOut/HearMeOut/hearmeoutfrontend/src/auth/actions/userActions.js":"15"},{"size":656,"mtime":1689908140500,"results":"16","hashOfConfig":"17"},{"size":1140,"mtime":1689908140495,"results":"18","hashOfConfig":"17"},{"size":416,"mtime":1689908140499,"results":"19","hashOfConfig":"17"},{"size":758,"mtime":1689908140499,"results":"20","hashOfConfig":"17"},{"size":4207,"mtime":1689908777565,"results":"21","hashOfConfig":"17"},{"size":3705,"mtime":1689908140501,"results":"22","hashOfConfig":"17"},{"size":686,"mtime":1689908140500,"results":"23","hashOfConfig":"17"},{"size":1002,"mtime":1689908140501,"results":"24","hashOfConfig":"17"},{"size":4001,"mtime":1689908140500,"results":"25","hashOfConfig":"17"},{"size":720,"mtime":1689908140501,"results":"26","hashOfConfig":"17"},{"size":3835,"mtime":1689908140501,"results":"27","hashOfConfig":"17"},{"size":202,"mtime":1689908140499,"results":"28","hashOfConfig":"17"},{"size":1593,"mtime":1689908140500,"results":"29","hashOfConfig":"17"},{"size":2752,"mtime":1689908140500,"results":"30","hashOfConfig":"17"},{"size":1734,"mtime":1689908140499,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1qrbur2",{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/davidsonchua/GitHub/HearMeOut/HearMeOut/hearmeoutfrontend/src/index.js",[],[],"/Users/davidsonchua/GitHub/HearMeOut/HearMeOut/hearmeoutfrontend/src/App.js",["82","83","84"],[],"// Pages \nimport Home from './pages/Home';\nimport Login from \"./pages/Login\";\nimport Signup from \"./pages/Signup\";\nimport Convert from \"./pages/Convert\";\nimport Dashboard from \"./pages/Dashboard\";\n\n// Styled Components \nimport { StyledContainer } from './components/Styles';\n\nimport React from 'react';\n\n//Loader css \nimport {\n    BrowserRouter as Router, Switch, Route\n} from 'react-router-dom';\n\n// auth & redux\nimport AuthRoute from \"./components/AuthRoute\";\nimport BasicRoute from \"./components/BasicRoute\";\nimport { connect } from \"react-redux\";\n\n\nfunction App() {\n    return (\n      <Router>\n        <StyledContainer>\n          <Switch>\n            <Route path=\"/signup\">\n              <Signup />\n            </Route>\n            <Route path=\"/convert\">\n              <Convert />\n            </Route>\n            <Route path=\"/login\">\n              <Login />\n            </Route>\n            <Route path=\"/dashboard\">\n              <Dashboard />\n            </Route>\n            <Route path=\"/\">\n              <Home />\n            </Route>\n          </Switch>\n        </StyledContainer>\n      </Router>\n    );\n}\n\nexport default App; \n","/Users/davidsonchua/GitHub/HearMeOut/HearMeOut/hearmeoutfrontend/src/auth/store.js",[],[],"/Users/davidsonchua/GitHub/HearMeOut/HearMeOut/hearmeoutfrontend/src/components/AuthRoute.js",[],[],"/Users/davidsonchua/GitHub/HearMeOut/HearMeOut/hearmeoutfrontend/src/pages/Dashboard.js",["85"],[],"import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom'; // Import the useHistory hook\nimport {\n  StyledContainer,\n  StyledTitle,\n  StyledTextBox,\n  StyledButton,\n  StyledDisplayBox,\n  StyledLogoutButton, // Assuming you have a custom styled component for the Logout button\n  ErrorMsg,\n  StyledConversionHistory,\n  StyledConversionItem,\n  StyledDropdown,\n  StyledSelectedConversion\n} from '../components/Styles1';\n\nfunction Dashboard() {\n  const history = useHistory(); // Initialize the useHistory hook\n  const [text, setText] = useState('');\n  const [convertedText, setConvertedText] = useState('');\n  const [error, setError] = useState('');\n  const [conversionHistory, setConversionHistory] = useState([]);\n  const [selectedConversion, setSelectedConversion] = useState(null);\n\n  useEffect(() => {\n    fetchConversionHistory();\n  }, []);\n\n  const fetchConversionHistory = async () => {\n    try {\n      const response = await axios.get('/conversions');\n      const history = response.data;\n      setConversionHistory(history);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleLogout = () => {\n    // Perform logout operation, such as redirecting to the login page or clearing user session\n    // Add your logout logic here\n\n    // Redirect the user to the /Home page upon logout\n    history.push('/Home');\n  };\n\n  const handleConvert = async () => {\n    if (text.trim() === '') {\n      // Handle empty input\n      return;\n    }\n\n    try {\n      const response = await axios.post('/conversions', { input: text });\n      const { output } = response.data; // Update the field name to match the backend response\n      setConvertedText(output);\n      fetchConversionHistory(); // Fetch the updated conversion history\n    } catch (error) {\n      setError('Conversion failed.');\n      console.error(error);\n    }\n  };\n\n  const handleConversionSelect = async (event) => {\n    const selectedId = parseInt(event.target.value);\n    const selectedConversion = conversionHistory.find((conversion) => conversion.id === selectedId);\n    setSelectedConversion(selectedConversion);\n\n    // Fetch the selected conversion by ID from the backend\n    try {\n      const response = await axios.get(`/conversions/${selectedId}`);\n      const { input, output } = response.data;\n      setSelectedConversion({ id: selectedId, input, output });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <StyledContainer>\n      <div>\n        <StyledTitle>Welcome to HearMeOut </StyledTitle>\n      </div>\n      <div>\n        <div style={{ display: 'flex' }}>\n          <div style={{ flex: '1' }}>\n            <StyledTextBox\n              value={text}\n              onChange={(e) => setText(e.target.value)}\n              placeholder=\"Paste or type your text here...\"\n            />\n            <div></div>\n            {error && <ErrorMsg>{error}</ErrorMsg>}\n            <div>\n              <StyledButton onClick={handleConvert}>Convert</StyledButton>\n            </div>\n            <StyledDisplayBox\n              value={convertedText}\n              readOnly\n              placeholder=\"Converted text will appear here\"\n            />\n          </div>\n          <div style={{ flex: '1', marginLeft: '1rem' }}>\n            <StyledConversionHistory>\n              <StyledDropdown onChange={handleConversionSelect}>\n                <option value=\"\">Select your Conversion History </option>\n                {conversionHistory.map((conversion) => (\n                  <option key={conversion.id} value={conversion.id}>\n                    Conversion {conversion.id}\n                  </option>\n                ))}\n              </StyledDropdown>\n              {selectedConversion && (\n                <StyledSelectedConversion>\n                  <p>Input: {selectedConversion.input}</p>\n                  <p>Output: {selectedConversion.output}</p>\n                </StyledSelectedConversion>\n              )}\n            </StyledConversionHistory>\n          </div>\n        </div>\n      </div>\n      <StyledLogoutButton onClick={handleLogout}>Logout</StyledLogoutButton>\n    </StyledContainer>\n  );\n}\n\nexport default Dashboard;\n","/Users/davidsonchua/GitHub/HearMeOut/HearMeOut/hearmeoutfrontend/src/pages/Login.js",["86","87","88"],[],"// styled components\nimport {\n    StyledTextInput,\n    StyledFormArea,\n    StyledFormButton,\n    StyledLabel,\n    Avatar,\n    StyledTitle,\n    colors,\n    ButtonGroup,\n    ExtraText,\n    TextLink,\n    CopyrightText,\n  } from \"./../components/Styles\";\n\nimport Logo from './../assets/HearMeOutLogo.png';\n\nimport React from 'react';\n\n// formik \nimport { Formik, Form } from \"formik\";\nimport {TextInput} from '../components/FormLib1';\nimport * as Yup from \"yup\";\n\n// icons \nimport {FiMail, FiLock} from 'react-icons/fi';\n\n// Loader \nimport { TailSpin } from \"react-loader-spinner\";\n\n// auth & redux  \nimport {connect} from 'react-redux';\nimport {loginUser} from \"./../auth/actions/userActions\";\nimport {useHistory} from \"react-router-dom\";\n\nfunction App() {\n  return <TailSpin />;\n}\n\n\nconst Login = ({loginUser}) => {\n        const history = useHistory();\n    return (\n        <div>\n            <StyledFormArea>\n                <Avatar image={Logo} />\n                <StyledTitle color={colors.theme} size={30}>\n                     💬 Login 🎧\n                </StyledTitle>\n                <Formik\n                    initialValues={{\n                        email: \"\",\n                        password: \"\",\n                      }}\n                      validationSchema={Yup.object({\n                        email: Yup.string()\n                          .email(\"Invalid email address\")\n                          .required(\"Required\"),\n                        password: Yup.string()\n                          .min(8, \"Password is too short\")\n                          .max(30, \"Password is too long\")\n                          .required(\"Required\"),\n                      })}\n                      onSubmit={(values, { setSubmitting, setFieldError }) => {\n                        console.log(values);\n                        loginUser(values, history, setFieldError, setSubmitting);\n                      }}\n                    >\n                      {({ isSubmitting }) => (\n                        <Form>\n                          <TextInput\n                            name=\"email\"\n                            type=\"text\"\n                            label=\"Email Address\"\n                            placeholder=\"user@hmo.com\"\n                            icon={<FiMail />}\n                          />\n            \n                          <TextInput\n                            name=\"password\"\n                            type=\"password\"\n                            label=\"Password\"\n                            placeholder=\"********\"\n                            icon={<FiLock />}\n                          />\n                          <ButtonGroup>\n                            {!isSubmitting && (\n                              <StyledFormButton type=\"submit\">Login</StyledFormButton>\n                            )}\n            \n                            {isSubmitting && (\n                              <TailSpin\n                                type=\"ThreeDots\"\n                                color={colors.theme}\n                                height={49}\n                                width={100}\n                              />\n                            )}\n                          </ButtonGroup>\n                        </Form>\n                      )}\n                    </Formik>\n                    <ExtraText>\n                      New here? <TextLink to=\"/signup\">Signup</TextLink>\n                    </ExtraText>\n                  </StyledFormArea>\n                  <CopyrightText>All rights reserved &copy;2023</CopyrightText>\n                </div>\n              );\n            };\n            \n            export default connect(null, { loginUser })(Login);\n            ","/Users/davidsonchua/GitHub/HearMeOut/HearMeOut/hearmeoutfrontend/src/components/BasicRoute.js",[],[],"/Users/davidsonchua/GitHub/HearMeOut/HearMeOut/hearmeoutfrontend/src/pages/Home.js",[],[],"/Users/davidsonchua/GitHub/HearMeOut/HearMeOut/hearmeoutfrontend/src/components/Styles.js",[],[],"/Users/davidsonchua/GitHub/HearMeOut/HearMeOut/hearmeoutfrontend/src/pages/Convert.js",[],[],"/Users/davidsonchua/GitHub/HearMeOut/HearMeOut/hearmeoutfrontend/src/pages/Signup.js",["89","90","91"],[],"// Styles Components \nimport {StyledTextInput, StyledFormArea, StyledFormButton, StyledLabel, Avatar, StyledTitle, colors, ButtonGroup, ExtraText,\n    TextLink,\n    CopyrightText\n} from './../components/Styles';\n\nimport Logo from './../assets/HearMeOutLogo.png';\n\nimport React from 'react';\n\n// formik \nimport {Formik, Form} from 'formik'; \nimport {TextInput} from '../components/FormLib1';\nimport * as yup from 'yup'; \n\n// icons \nimport {FiMail, FiLock, FiUser, FiCalendar} from 'react-icons/fi';\n\n// Loader \nimport { TailSpin } from \"react-loader-spinner\";\n\n\n// auth & redux  \nimport { connect } from 'react-redux';\nimport { signupUser } from \"./../auth/actions/userActions\";\nimport { useHistory } from \"react-router-dom\";\n\n\n\nfunction App() {\nreturn <TailSpin />;\n}\n\nconst Signup = ({signupUser}) => {\n    const history = useHistory();\nreturn (\n    <div>\n        <StyledFormArea>\n            <Avatar image={Logo} />\n            <StyledTitle color={colors.theme} size={30}>\n                 💬 Signup 🎧\n            </StyledTitle>\n            <Formik\n          initialValues={{\n            email: \"\",\n            password: \"\",\n            repeatPassword: \"\",\n            dateOfBirth: \"\",\n            name: \"\",\n          }}\n          validationSchema={yup.object({\n            email: yup.string()\n              .email(\"Invalid email address\")\n              .required(\"Required\"),\n            password: yup.string()\n              .min(8, \"Password is too short\")\n              .max(30, \"Password is too long\")\n              .required(\"Required\"),\n            name: yup.string().required(\"Required\"),\n            dateOfBirth: yup.date().required(\"Required\"),\n            repeatPassword: yup.string()\n              .required(\"Required\")\n              .oneOf([yup.ref(\"password\")], \"Passwords must match\"),\n          })}\n          onSubmit={(values, { setSubmitting, setFieldError }) => {\n            signupUser(values, history, setFieldError, setSubmitting);\n          }}\n        >\n          {({ isSubmitting }) => (\n            <Form>\n              <TextInput\n                name=\"name\"\n                type=\"text\"\n                label=\"Full Name\"\n                placeholder=\"DAV\"\n                icon={<FiUser />}\n              />\n              <TextInput\n                name=\"email\"\n                type=\"text\"\n                label=\"Email Address\"\n                placeholder=\"user@hmo.com\"\n                icon={<FiMail />}\n              />\n              <TextInput\n                name=\"dateOfBirth\"\n                type=\"date\"\n                label=\"Date of Birth\"\n                icon={<FiCalendar />}\n              />\n              <TextInput\n                name=\"password\"\n                type=\"password\"\n                label=\"Password\"\n                placeholder=\"********\"\n                icon={<FiLock />}\n              />\n              <TextInput\n                name=\"repeatPassword\"\n                type=\"password\"\n                label=\"Repeat Password\"\n                placeholder=\"********\"\n                icon={<FiLock />}\n              />\n              <ButtonGroup>\n                {!isSubmitting && (\n                  <StyledFormButton type=\"submit\">Signup</StyledFormButton>\n                )}\n\n                {isSubmitting && (\n                  <TailSpin\n                    type=\"ThreeDots\"\n                    color={colors.theme}\n                    height={49}\n                    width={100}\n                  />\n                )}\n              </ButtonGroup>\n            </Form>\n          )}\n        </Formik>\n        <ExtraText>\n          Already have an account? <TextLink to=\"/login\">Login</TextLink>\n        </ExtraText>\n      </StyledFormArea>\n      <CopyrightText>All rights reserved &copy;2023</CopyrightText>\n    </div>\n  );\n};\n\nexport default connect(null, { signupUser })(Signup);\n","/Users/davidsonchua/GitHub/HearMeOut/HearMeOut/hearmeoutfrontend/src/auth/reducers/rootReducer.js",[],[],"/Users/davidsonchua/GitHub/HearMeOut/HearMeOut/hearmeoutfrontend/src/components/FormLib1.js",[],[],"/Users/davidsonchua/GitHub/HearMeOut/HearMeOut/hearmeoutfrontend/src/components/Styles1.js",["92"],[],"import styled from \"styled-components\";\n\n// background\nimport background from \"./../assets/HMOBG.png\";\n\n// React router\nimport { Link } from \"react-router-dom\";\n\n\nexport const colors = {\n  primary: \"#fff\",\n  theme: \"#BE185D\",\n  light1: \"#F3F4F6\",\n  light2: \"#E5E7EB\",\n  dark1: \"#1F2937\",\n  dark2: \"#4B5563\",\n  dark3: \"#9CA3AF\",\n  red: \"#DC2626\",\n};\n\nexport const StyledContainer = styled.div`\n  margin: 0;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  background: linear-gradient(\n      0deg,\n      rgba(0, 0, 0, 0.6),\n      rgba(0, 0, 0, 0.6)\n    ),\n    url(${background});\n  background-size: cover;\n  background-attachment: fixed;\n`;\n\nexport const StyledTitle = styled.h2`\n  font-size: ${(props) => props.size}px;\n  text-align: center;\n  color: ${(props) => (props.color ? props.color : colors.primary)};\n  padding: 5px;\n  margin-bottom: 20px;\n`;\n\nexport const StyledTextBox = styled.textarea`\n  width: 400px;\n  height: 150px;\n  padding: 10px;\n  font-size: 16px;\n  border: none;\n  border-radius: 5px;\n  background-color: ${colors.light2};\n  color: ${colors.dark1};\n  resize: vertical;\n  margin-bottom: 20px;\n`;\n\nexport const StyledButton = styled.button`\n  padding: 10px 20px;\n  font-size: 16px;\n  background-color: ${colors.theme};\n  color: ${colors.primary};\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  margin-bottom: 20px;\n`;\n\nexport const StyledDisplayBox = styled.textarea`\n  width: 400px;\n  height: 200px;\n  padding: 10px;\n  font-size: 16px;\n  border: none;\n  border-radius: 5px;\n  background-color: ${colors.light2};\n  color: ${colors.dark1};\n  resize: vertical;\n`;\n\nexport const StyledLogoutButton = styled.button`\n  padding: 15px 30px;\n  font-size: 20px;\n  background-color: ${colors.primary};\n  color: ${colors.theme};\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  margin-top: 20px;\n`;\n\nexport const ErrorMsg = styled.div`\n  font-size: 14px;\n  color: red;\n  margin-top: 5px;\n  text-align: center;\n`;\n\nexport const StyledConversionHistory = styled.div`\n  width: 400px;\n  padding: 10px;\n  background-color: ${colors.light1};\n  border-radius: 5px;\n  margin-bottom: 20px;\n`;\n\nexport const StyledConversionItem = styled.li`\n  cursor: pointer;\n  padding: 10px;\n  background-color: ${(props) => (props.selected ? colors.light2 : 'transparent')};\n\n  &:hover {\n    background-color: ${colors.light2};\n  }\n`;\n\nexport const StyledDropdown = styled.select`\n  width: 400px;\n  padding: 8px;\n  margin-bottom: 10px;\n  border-radius: 5px;\n  background-color: ${colors.light2};\n  color: ${colors.dark1};\n`;\n\nexport const StyledSelectedConversion = styled.div`\n  padding: 10px;\n  background-color: ${colors.light1};\n  border-radius: 5px;\n  margin-top: 10px;\n`;\n","/Users/davidsonchua/GitHub/HearMeOut/HearMeOut/hearmeoutfrontend/src/auth/actions/userActions.js",[],[],{"ruleId":"93","severity":1,"message":"94","line":19,"column":8,"nodeType":"95","messageId":"96","endLine":19,"endColumn":17},{"ruleId":"93","severity":1,"message":"97","line":20,"column":8,"nodeType":"95","messageId":"96","endLine":20,"endColumn":18},{"ruleId":"93","severity":1,"message":"98","line":21,"column":10,"nodeType":"95","messageId":"96","endLine":21,"endColumn":17},{"ruleId":"93","severity":1,"message":"99","line":13,"column":3,"nodeType":"95","messageId":"96","endLine":13,"endColumn":23},{"ruleId":"93","severity":1,"message":"100","line":3,"column":5,"nodeType":"95","messageId":"96","endLine":3,"endColumn":20},{"ruleId":"93","severity":1,"message":"101","line":6,"column":5,"nodeType":"95","messageId":"96","endLine":6,"endColumn":16},{"ruleId":"93","severity":1,"message":"102","line":36,"column":10,"nodeType":"95","messageId":"96","endLine":36,"endColumn":13},{"ruleId":"93","severity":1,"message":"100","line":2,"column":9,"nodeType":"95","messageId":"96","endLine":2,"endColumn":24},{"ruleId":"93","severity":1,"message":"101","line":2,"column":60,"nodeType":"95","messageId":"96","endLine":2,"endColumn":71},{"ruleId":"93","severity":1,"message":"102","line":30,"column":10,"nodeType":"95","messageId":"96","endLine":30,"endColumn":13},{"ruleId":"93","severity":1,"message":"103","line":7,"column":10,"nodeType":"95","messageId":"96","endLine":7,"endColumn":14},"no-unused-vars","'AuthRoute' is defined but never used.","Identifier","unusedVar","'BasicRoute' is defined but never used.","'connect' is defined but never used.","'StyledConversionItem' is defined but never used.","'StyledTextInput' is defined but never used.","'StyledLabel' is defined but never used.","'App' is defined but never used.","'Link' is defined but never used."]