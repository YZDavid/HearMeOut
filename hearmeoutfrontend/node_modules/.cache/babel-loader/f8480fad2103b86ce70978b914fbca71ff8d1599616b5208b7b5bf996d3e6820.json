{"ast":null,"code":"const reWords = /[A-Z\\xc0-\\xd6\\xd8-\\xde]?[a-z\\xdf-\\xf6\\xf8-\\xff]+(?:['’](?:d|ll|m|re|s|t|ve))?(?=[\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000]|[A-Z\\xc0-\\xd6\\xd8-\\xde]|$)|(?:[A-Z\\xc0-\\xd6\\xd8-\\xde]|[^\\ud800-\\udfff\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\d+\\u2700-\\u27bfa-z\\xdf-\\xf6\\xf8-\\xffA-Z\\xc0-\\xd6\\xd8-\\xde])+(?:['’](?:D|LL|M|RE|S|T|VE))?(?=[\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000]|[A-Z\\xc0-\\xd6\\xd8-\\xde](?:[a-z\\xdf-\\xf6\\xf8-\\xff]|[^\\ud800-\\udfff\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\d+\\u2700-\\u27bfa-z\\xdf-\\xf6\\xf8-\\xffA-Z\\xc0-\\xd6\\xd8-\\xde])|$)|[A-Z\\xc0-\\xd6\\xd8-\\xde]?(?:[a-z\\xdf-\\xf6\\xf8-\\xff]|[^\\ud800-\\udfff\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\d+\\u2700-\\u27bfa-z\\xdf-\\xf6\\xf8-\\xffA-Z\\xc0-\\xd6\\xd8-\\xde])+(?:['’](?:d|ll|m|re|s|t|ve))?|[A-Z\\xc0-\\xd6\\xd8-\\xde]+(?:['’](?:D|LL|M|RE|S|T|VE))?|\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])|\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])|\\d+|(?:[\\u2700-\\u27bf]|(?:\\ud83c[\\udde6-\\uddff]){2}|[\\ud800-\\udbff][\\udc00-\\udfff])[\\ufe0e\\ufe0f]?(?:[\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff]|\\ud83c[\\udffb-\\udfff])?(?:\\u200d(?:[^\\ud800-\\udfff]|(?:\\ud83c[\\udde6-\\uddff]){2}|[\\ud800-\\udbff][\\udc00-\\udfff])[\\ufe0e\\ufe0f]?(?:[\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff]|\\ud83c[\\udffb-\\udfff])?)*/g;\nconst words = str => str.match(reWords) || [];\nconst upperFirst = str => str[0].toUpperCase() + str.slice(1);\nconst join = (str, d) => words(str).join(d).toLowerCase();\nconst camelCase = str => words(str).reduce((acc, next) => `${acc}${!acc ? next.toLowerCase() : next[0].toUpperCase() + next.slice(1).toLowerCase()}`, '');\nconst pascalCase = str => upperFirst(camelCase(str));\nconst snakeCase = str => join(str, '_');\nconst kebabCase = str => join(str, '-');\nconst sentenceCase = str => upperFirst(join(str, ' '));\nconst titleCase = str => words(str).map(upperFirst).join(' ');\nmodule.exports = {\n  words,\n  upperFirst,\n  camelCase,\n  pascalCase,\n  snakeCase,\n  kebabCase,\n  sentenceCase,\n  titleCase\n};","map":{"version":3,"names":["reWords","words","str","match","upperFirst","toUpperCase","slice","join","d","toLowerCase","camelCase","reduce","acc","next","pascalCase","snakeCase","kebabCase","sentenceCase","titleCase","map","module","exports"],"sources":["C:/Users/user/Documents/GitHub/HearMeOut/hearmeoutfrontend/node_modules/tiny-case/index.js"],"sourcesContent":["const reWords = /[A-Z\\xc0-\\xd6\\xd8-\\xde]?[a-z\\xdf-\\xf6\\xf8-\\xff]+(?:['’](?:d|ll|m|re|s|t|ve))?(?=[\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000]|[A-Z\\xc0-\\xd6\\xd8-\\xde]|$)|(?:[A-Z\\xc0-\\xd6\\xd8-\\xde]|[^\\ud800-\\udfff\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\d+\\u2700-\\u27bfa-z\\xdf-\\xf6\\xf8-\\xffA-Z\\xc0-\\xd6\\xd8-\\xde])+(?:['’](?:D|LL|M|RE|S|T|VE))?(?=[\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000]|[A-Z\\xc0-\\xd6\\xd8-\\xde](?:[a-z\\xdf-\\xf6\\xf8-\\xff]|[^\\ud800-\\udfff\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\d+\\u2700-\\u27bfa-z\\xdf-\\xf6\\xf8-\\xffA-Z\\xc0-\\xd6\\xd8-\\xde])|$)|[A-Z\\xc0-\\xd6\\xd8-\\xde]?(?:[a-z\\xdf-\\xf6\\xf8-\\xff]|[^\\ud800-\\udfff\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\d+\\u2700-\\u27bfa-z\\xdf-\\xf6\\xf8-\\xffA-Z\\xc0-\\xd6\\xd8-\\xde])+(?:['’](?:d|ll|m|re|s|t|ve))?|[A-Z\\xc0-\\xd6\\xd8-\\xde]+(?:['’](?:D|LL|M|RE|S|T|VE))?|\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])|\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])|\\d+|(?:[\\u2700-\\u27bf]|(?:\\ud83c[\\udde6-\\uddff]){2}|[\\ud800-\\udbff][\\udc00-\\udfff])[\\ufe0e\\ufe0f]?(?:[\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff]|\\ud83c[\\udffb-\\udfff])?(?:\\u200d(?:[^\\ud800-\\udfff]|(?:\\ud83c[\\udde6-\\uddff]){2}|[\\ud800-\\udbff][\\udc00-\\udfff])[\\ufe0e\\ufe0f]?(?:[\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff]|\\ud83c[\\udffb-\\udfff])?)*/g\r\n\r\nconst words = (str) => str.match(reWords) || []\r\n\r\nconst upperFirst = (str) => str[0].toUpperCase() + str.slice(1)\r\n\r\nconst join = (str, d) => words(str).join(d).toLowerCase()\r\n\r\nconst camelCase = (str) =>\r\n  words(str).reduce(\r\n    (acc, next) =>\r\n      `${acc}${\r\n        !acc\r\n          ? next.toLowerCase()\r\n          : next[0].toUpperCase() + next.slice(1).toLowerCase()\r\n      }`,\r\n    '',\r\n  )\r\n\r\nconst pascalCase = (str) => upperFirst(camelCase(str))\r\n\r\nconst snakeCase = (str) => join(str, '_')\r\n\r\nconst kebabCase = (str) => join(str, '-')\r\n\r\nconst sentenceCase = (str) => upperFirst(join(str, ' '))\r\n\r\nconst titleCase = (str) => words(str).map(upperFirst).join(' ')\r\n\r\nmodule.exports = {\r\n  words,\r\n  upperFirst,\r\n  camelCase,\r\n  pascalCase,\r\n  snakeCase,\r\n  kebabCase,\r\n  sentenceCase,\r\n  titleCase,\r\n}\r\n"],"mappings":"AAAA,MAAMA,OAAO,GAAG,m9DAAm9D;AAEn+D,MAAMC,KAAK,GAAIC,GAAG,IAAKA,GAAG,CAACC,KAAK,CAACH,OAAO,CAAC,IAAI,EAAE;AAE/C,MAAMI,UAAU,GAAIF,GAAG,IAAKA,GAAG,CAAC,CAAC,CAAC,CAACG,WAAW,CAAC,CAAC,GAAGH,GAAG,CAACI,KAAK,CAAC,CAAC,CAAC;AAE/D,MAAMC,IAAI,GAAGA,CAACL,GAAG,EAAEM,CAAC,KAAKP,KAAK,CAACC,GAAG,CAAC,CAACK,IAAI,CAACC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;AAEzD,MAAMC,SAAS,GAAIR,GAAG,IACpBD,KAAK,CAACC,GAAG,CAAC,CAACS,MAAM,CACf,CAACC,GAAG,EAAEC,IAAI,KACP,GAAED,GAAI,GACL,CAACA,GAAG,GACAC,IAAI,CAACJ,WAAW,CAAC,CAAC,GAClBI,IAAI,CAAC,CAAC,CAAC,CAACR,WAAW,CAAC,CAAC,GAAGQ,IAAI,CAACP,KAAK,CAAC,CAAC,CAAC,CAACG,WAAW,CAAC,CACvD,EAAC,EACJ,EACF,CAAC;AAEH,MAAMK,UAAU,GAAIZ,GAAG,IAAKE,UAAU,CAACM,SAAS,CAACR,GAAG,CAAC,CAAC;AAEtD,MAAMa,SAAS,GAAIb,GAAG,IAAKK,IAAI,CAACL,GAAG,EAAE,GAAG,CAAC;AAEzC,MAAMc,SAAS,GAAId,GAAG,IAAKK,IAAI,CAACL,GAAG,EAAE,GAAG,CAAC;AAEzC,MAAMe,YAAY,GAAIf,GAAG,IAAKE,UAAU,CAACG,IAAI,CAACL,GAAG,EAAE,GAAG,CAAC,CAAC;AAExD,MAAMgB,SAAS,GAAIhB,GAAG,IAAKD,KAAK,CAACC,GAAG,CAAC,CAACiB,GAAG,CAACf,UAAU,CAAC,CAACG,IAAI,CAAC,GAAG,CAAC;AAE/Da,MAAM,CAACC,OAAO,GAAG;EACfpB,KAAK;EACLG,UAAU;EACVM,SAAS;EACTI,UAAU;EACVC,SAAS;EACTC,SAAS;EACTC,YAAY;EACZC;AACF,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}