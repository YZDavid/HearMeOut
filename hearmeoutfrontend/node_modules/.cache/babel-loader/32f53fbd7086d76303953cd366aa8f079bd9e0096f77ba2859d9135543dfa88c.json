{"ast":null,"code":"// Dashboard.js\n\nfunction Dashboard() {\n  // Get DOM elements\n  const logoutButton = document.getElementById('logout-button');\n  const inputTextarea = document.getElementById('input-textarea');\n  const convertButton = document.getElementById('convert-button');\n  const displayTextarea = document.getElementById('display-textarea');\n\n  // Add event listener to the logout button\n  logoutButton.addEventListener('click', () => {\n    // Perform logout operation, such as redirecting to the login page or clearing user session\n    // Add your logout logic here\n  });\n\n  // Add event listener to the convert button\n  convertButton.addEventListener('click', async () => {\n    const text = inputTextarea.value.trim();\n    if (text === '') {\n      // Handle empty input\n      return;\n    }\n\n    // Send the text to the backend for conversion\n    const response = await fetch('/convert', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        text\n      })\n    });\n    if (response.ok) {\n      const {\n        convertedText\n      } = await response.json();\n      displayTextarea.value = convertedText;\n    } else {\n      displayTextarea.value = 'Conversion failed.';\n    }\n  });\n}\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["Dashboard","logoutButton","document","getElementById","inputTextarea","convertButton","displayTextarea","addEventListener","text","value","trim","response","fetch","method","headers","body","JSON","stringify","ok","convertedText","json","_c","$RefreshReg$"],"sources":["/Users/davidsonchua/HearMeOut/hearmeoutfrontend/src/pages/Dashboard.js"],"sourcesContent":["// Dashboard.js\n\nfunction Dashboard() {\n    // Get DOM elements\n    const logoutButton = document.getElementById('logout-button');\n    const inputTextarea = document.getElementById('input-textarea');\n    const convertButton = document.getElementById('convert-button');\n    const displayTextarea = document.getElementById('display-textarea');\n  \n    // Add event listener to the logout button\n    logoutButton.addEventListener('click', () => {\n      // Perform logout operation, such as redirecting to the login page or clearing user session\n      // Add your logout logic here\n    });\n  \n    // Add event listener to the convert button\n    convertButton.addEventListener('click', async () => {\n      const text = inputTextarea.value.trim();\n  \n      if (text === '') {\n        // Handle empty input\n        return;\n      }\n  \n      // Send the text to the backend for conversion\n      const response = await fetch('/convert', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ text })\n      });\n  \n      if (response.ok) {\n        const { convertedText } = await response.json();\n        displayTextarea.value = convertedText;\n      } else {\n        displayTextarea.value = 'Conversion failed.';\n      }\n    });\n  }\n  \n  export default Dashboard;\n  "],"mappings":"AAAA;;AAEA,SAASA,SAASA,CAAA,EAAG;EACjB;EACA,MAAMC,YAAY,GAAGC,QAAQ,CAACC,cAAc,CAAC,eAAe,CAAC;EAC7D,MAAMC,aAAa,GAAGF,QAAQ,CAACC,cAAc,CAAC,gBAAgB,CAAC;EAC/D,MAAME,aAAa,GAAGH,QAAQ,CAACC,cAAc,CAAC,gBAAgB,CAAC;EAC/D,MAAMG,eAAe,GAAGJ,QAAQ,CAACC,cAAc,CAAC,kBAAkB,CAAC;;EAEnE;EACAF,YAAY,CAACM,gBAAgB,CAAC,OAAO,EAAE,MAAM;IAC3C;IACA;EAAA,CACD,CAAC;;EAEF;EACAF,aAAa,CAACE,gBAAgB,CAAC,OAAO,EAAE,YAAY;IAClD,MAAMC,IAAI,GAAGJ,aAAa,CAACK,KAAK,CAACC,IAAI,CAAC,CAAC;IAEvC,IAAIF,IAAI,KAAK,EAAE,EAAE;MACf;MACA;IACF;;IAEA;IACA,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAC,UAAU,EAAE;MACvCC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAET;MAAK,CAAC;IAC/B,CAAC,CAAC;IAEF,IAAIG,QAAQ,CAACO,EAAE,EAAE;MACf,MAAM;QAAEC;MAAc,CAAC,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;MAC/Cd,eAAe,CAACG,KAAK,GAAGU,aAAa;IACvC,CAAC,MAAM;MACLb,eAAe,CAACG,KAAK,GAAG,oBAAoB;IAC9C;EACF,CAAC,CAAC;AACJ;AAACY,EAAA,GAtCMrB,SAAS;AAwChB,eAAeA,SAAS;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}