{"ast":null,"code":"var _jsxFileName = \"/Users/davidsonchua/HearMeOut/hearmeoutfrontend/src/pages/Dashboard.js\",\n  _s = $RefreshSig$();\nimport { StyledTitle, StyledSubTitle, Avatar, StyledButton, ButtonGroup, StyledFormArea, colors } from \"../components/Styles\";\nimport PostForm from \"../components/PostForm\";\nimport React, { useState } from 'react';\n\n//Logo\nimport Logo from \"./../assets/HearMeOutLogo.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [inputText, setInputText] = useState('');\n  const [convertedText, setConvertedText] = useState('');\n  const handleInputChange = e => {\n    setInputText(e.target.value);\n  };\n  const handleConvertClick = () => {\n    // Perform your conversion logic here\n    const converted = inputText.toUpperCase();\n    setConvertedText(converted);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      styles: {\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        backgroundColor: \"transparent\",\n        width: \"100%\",\n        display: \"flex\",\n        justifyContent: \"flex-start\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Avatar, {\n        image: Logo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(StyledFormArea, {\n      bg: colors.dark2,\n      children: [/*#__PURE__*/_jsxDEV(StyledTitle, {\n        size: 12,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \" Let HMO do the talking \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n          children: /*#__PURE__*/_jsxDEV(StyledButton, {\n            to: \"/Convert\",\n            children: \" Convert \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(PostForm, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n        children: /*#__PURE__*/_jsxDEV(StyledButton, {\n          to: \"/Home\",\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 11\n  }, this);\n};\n_s(Dashboard, \"qYYRSK0QZGqPtcGE2QPoNlq0EkE=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["StyledTitle","StyledSubTitle","Avatar","StyledButton","ButtonGroup","StyledFormArea","colors","PostForm","React","useState","Logo","jsxDEV","_jsxDEV","Dashboard","_s","inputText","setInputText","convertedText","setConvertedText","handleInputChange","e","target","value","handleConvertClick","converted","toUpperCase","children","styles","position","top","left","backgroundColor","width","display","justifyContent","image","fileName","_jsxFileName","lineNumber","columnNumber","bg","dark2","size","type","to","_c","$RefreshReg$"],"sources":["/Users/davidsonchua/HearMeOut/hearmeoutfrontend/src/pages/Dashboard.js"],"sourcesContent":["    import { StyledTitle, StyledSubTitle, Avatar,\n    StyledButton, ButtonGroup,\n    StyledFormArea, colors } from \"../components/Styles\";\n\n    import PostForm from \"../components/PostForm\";\n    \n    import React, { useState } from 'react';\n    \n    //Logo\n    import Logo from \"./../assets/HearMeOutLogo.png\"\n\n    \n    const Dashboard = () => {\n        const [inputText, setInputText] = useState('');\n        const [convertedText, setConvertedText] = useState('');\n\n        const handleInputChange = (e) => {\n            setInputText(e.target.value);\n  };\n\n  const handleConvertClick = () => {\n    // Perform your conversion logic here\n    const converted = inputText.toUpperCase();\n    setConvertedText(converted);\n  };\n\n        return (\n          <div>\n            <div styles={{\n                position: \"absolute\",\n                top: 0,\n                left: 0,\n                backgroundColor: \"transparent\",\n                width: \"100%\",\n                display: \"flex\",\n                justifyContent: \"flex-start\",\n            }} >\n                <Avatar image={Logo} /> \n            </div>\n            <StyledFormArea bg={colors.dark2}>\n                <StyledTitle size={12}>\n                <h1> Let HMO do the talking </h1>\n                <input type=\"text\"/> \n\n        <ButtonGroup>\n        <StyledButton to=\"/Convert\"> Convert </StyledButton>\n        </ButtonGroup>\n        <PostForm />\n                </StyledTitle>\n                <ButtonGroup>\n                    <StyledButton to=\"/Home\" >Logout</StyledButton>\n                </ButtonGroup>\n            </StyledFormArea>\n          </div>\n        )\n    }\n    \n    export default Dashboard; \n    "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}