{"ast":null,"code":"var _jsxFileName = \"/Users/davidsonchua/HearMeOut/hearmeoutfrontend/src/pages/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const [text, setText] = useState('');\n  const [convertedText, setConvertedText] = useState('');\n  const [error, setError] = useState('');\n  const handleLogout = () => {\n    // Perform logout operation, such as redirecting to the login page or clearing user session\n    // Add your logout logic here\n  };\n  const handleConvert = async () => {\n    if (text.trim() === '') {\n      // Handle empty input\n      return;\n    }\n    try {\n      const response = await axios.post('/convert', {\n        text\n      });\n      const {\n        convertedText\n      } = response.data;\n      setConvertedText(convertedText);\n    } catch (error) {\n      setError('Conversion failed.');\n      console.error(error);\n    }\n  };\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('/initial-data');\n        const {\n          convertedText\n        } = response.data;\n        setConvertedText(convertedText);\n      } catch (error) {\n        setError('Failed to fetch initial data.');\n        console.error(error);\n      }\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcome to the Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogout,\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: text,\n      onChange: e => setText(e.target.value),\n      placeholder: \"Paste or type your text here...\",\n      rows: \"5\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleConvert,\n      children: \"Convert\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: convertedText,\n      readOnly: true,\n      placeholder: \"Converted text will appear here\",\n      rows: \"10\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"Taq5rG9MXn2IWUW4iMrLeYqCNCA=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","Dashboard","_s","text","setText","convertedText","setConvertedText","error","setError","handleLogout","handleConvert","trim","response","post","data","console","fetchData","get","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","value","onChange","e","target","placeholder","rows","readOnly","_c","$RefreshReg$"],"sources":["/Users/davidsonchua/HearMeOut/hearmeoutfrontend/src/pages/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nfunction Dashboard() {\n  const [text, setText] = useState('');\n  const [convertedText, setConvertedText] = useState('');\n  const [error, setError] = useState('');\n\n  const handleLogout = () => {\n    // Perform logout operation, such as redirecting to the login page or clearing user session\n    // Add your logout logic here\n  };\n\n  const handleConvert = async () => {\n    if (text.trim() === '') {\n      // Handle empty input\n      return;\n    }\n\n    try {\n      const response = await axios.post('/convert', { text });\n      const { convertedText } = response.data;\n      setConvertedText(convertedText);\n    } catch (error) {\n      setError('Conversion failed.');\n      console.error(error);\n    }\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('/initial-data');\n        const { convertedText } = response.data;\n        setConvertedText(convertedText);\n      } catch (error) {\n        setError('Failed to fetch initial data.');\n        console.error(error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  return (\n    <div>\n      <h1>Welcome to the Dashboard</h1>\n      <button onClick={handleLogout}>Logout</button>\n      <br />\n      <textarea\n        value={text}\n        onChange={(e) => setText(e.target.value)}\n        placeholder=\"Paste or type your text here...\"\n        rows=\"5\"\n      ></textarea>\n      <button onClick={handleConvert}>Convert</button>\n      <br />\n      {error && <div>{error}</div>}\n      <textarea\n        value={convertedText}\n        readOnly\n        placeholder=\"Converted text will appear here\"\n        rows=\"10\"\n      ></textarea>\n    </div>\n  );\n}\n\nexport default Dashboard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}