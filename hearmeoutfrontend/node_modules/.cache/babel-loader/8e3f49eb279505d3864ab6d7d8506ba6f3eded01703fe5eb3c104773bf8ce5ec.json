{"ast":null,"code":"var _jsxFileName = \"/Users/davidsonchua/HearMeOut/hearmeoutfrontend/src/pages/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { StyledContainer, StyledTitle, StyledButton, StyledTextInput, StyledFormArea, ErrorMsg, ExtraText } from '../components/Styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const [text, setText] = useState('');\n  const [convertedText, setConvertedText] = useState('');\n  const [error, setError] = useState('');\n  const handleLogout = () => {\n    // Perform logout operation, such as redirecting to the login page or clearing user session\n    // Add your logout logic here\n  };\n  const handleConvert = async () => {\n    if (text.trim() === '') {\n      // Handle empty input\n      return;\n    }\n    try {\n      const response = await axios.post('/convert', {\n        text\n      });\n      const {\n        convertedText\n      } = response.data;\n      setConvertedText(convertedText);\n    } catch (error) {\n      setError('Conversion failed.');\n      console.error(error);\n    }\n  };\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('/initial-data');\n        const {\n          convertedText\n        } = response.data;\n        setConvertedText(convertedText);\n      } catch (error) {\n        setError('Failed to fetch initial data.');\n        console.error(error);\n      }\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(StyledContainer, {\n    children: /*#__PURE__*/_jsxDEV(StyledFormArea, {\n      children: [/*#__PURE__*/_jsxDEV(StyledTitle, {\n        size: 24,\n        color: \"#fff\",\n        children: \"Welcome to the Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyledButton, {\n        to: \"/\",\n        className: \"logout-button\",\n        onClick: handleLogout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyledTextInput, {\n        value: text,\n        onChange: e => setText(e.target.value),\n        placeholder: \"Paste or type your text here...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyledButton, {\n        className: \"convert-button\",\n        onClick: handleConvert,\n        children: \"Convert\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(ErrorMsg, {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(StyledTextInput, {\n        value: convertedText,\n        readOnly: true,\n        placeholder: \"Converted text will appear here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"Taq5rG9MXn2IWUW4iMrLeYqCNCA=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","axios","StyledContainer","StyledTitle","StyledButton","StyledTextInput","StyledFormArea","ErrorMsg","ExtraText","jsxDEV","_jsxDEV","Dashboard","_s","text","setText","convertedText","setConvertedText","error","setError","handleLogout","handleConvert","trim","response","post","data","console","fetchData","get","children","size","color","fileName","_jsxFileName","lineNumber","columnNumber","to","className","onClick","value","onChange","e","target","placeholder","readOnly","_c","$RefreshReg$"],"sources":["/Users/davidsonchua/HearMeOut/hearmeoutfrontend/src/pages/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport {\n  StyledContainer,\n  StyledTitle,\n  StyledButton,\n  StyledTextInput,\n  StyledFormArea,\n  ErrorMsg,\n  ExtraText\n} from '../components/Styles';\n\nfunction Dashboard() {\n  const [text, setText] = useState('');\n  const [convertedText, setConvertedText] = useState('');\n  const [error, setError] = useState('');\n\n  const handleLogout = () => {\n    // Perform logout operation, such as redirecting to the login page or clearing user session\n    // Add your logout logic here\n  };\n\n  const handleConvert = async () => {\n    if (text.trim() === '') {\n      // Handle empty input\n      return;\n    }\n\n    try {\n      const response = await axios.post('/convert', { text });\n      const { convertedText } = response.data;\n      setConvertedText(convertedText);\n    } catch (error) {\n      setError('Conversion failed.');\n      console.error(error);\n    }\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('/initial-data');\n        const { convertedText } = response.data;\n        setConvertedText(convertedText);\n      } catch (error) {\n        setError('Failed to fetch initial data.');\n        console.error(error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  return (\n    <StyledContainer>\n      <StyledFormArea>\n        <StyledTitle size={24} color=\"#fff\">\n          Welcome to the Dashboard\n        </StyledTitle>\n        <StyledButton to=\"/\" className=\"logout-button\" onClick={handleLogout}>\n          Logout\n        </StyledButton>\n        <br />\n        <StyledTextInput\n          value={text}\n          onChange={(e) => setText(e.target.value)}\n          placeholder=\"Paste or type your text here...\"\n        />\n        <StyledButton className=\"convert-button\" onClick={handleConvert}>\n          Convert\n        </StyledButton>\n        <br />\n        {error && <ErrorMsg>{error}</ErrorMsg>}\n        <StyledTextInput\n          value={convertedText}\n          readOnly\n          placeholder=\"Converted text will appear here\"\n        />\n      </StyledFormArea>\n    </StyledContainer>\n  );\n}\n\nexport default Dashboard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}