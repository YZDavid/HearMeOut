{"ast":null,"code":"var _jsxFileName = \"/Users/davidsonchua/GitHub/HearMeOut/HearMeOut/hearmeoutfrontend/src/components/AuthRoute.js\";\n// Dashboard cannot be accessed unless logged in\n\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthRoute = _ref => {\n  let {\n    children,\n    authenticated,\n    ...rest\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Route, {\n    ...rest,\n    render: _ref2 => {\n      let {\n        location\n      } = _ref2;\n      return authenticated ? children : /*#__PURE__*/_jsxDEV(Redirect, {\n        to: {\n          pathname: \"/login\",\n          state: {\n            from: location\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 21\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n};\n_c = AuthRoute;\nconst mapStateToProps = _ref3 => {\n  let {\n    session\n  } = _ref3;\n  return {\n    authenticated: session.authenticated\n  };\n};\nexport default connect(mapStateToProps)(AuthRoute);\nvar _c;\n$RefreshReg$(_c, \"AuthRoute\");","map":{"version":3,"names":["Route","Redirect","connect","jsxDEV","_jsxDEV","AuthRoute","_ref","children","authenticated","rest","render","_ref2","location","to","pathname","state","from","fileName","_jsxFileName","lineNumber","columnNumber","_c","mapStateToProps","_ref3","session","$RefreshReg$"],"sources":["/Users/davidsonchua/GitHub/HearMeOut/HearMeOut/hearmeoutfrontend/src/components/AuthRoute.js"],"sourcesContent":["// Dashboard cannot be accessed unless logged in\r\n\r\nimport {Route, Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n\r\nconst AuthRoute = ({children, authenticated, ...rest}) => {\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={\r\n                ({location}) => authenticated ? (children) : (\r\n                    <Redirect\r\n                        to={{\r\n                            pathname: \"/login\",\r\n                            state: {from: location}\r\n                        }}\r\n                    />\r\n                )\r\n            }\r\n        />\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({session}) =>({\r\n    authenticated: session.authenticated\r\n})\r\n\r\nexport default connect(mapStateToProps)(AuthRoute);"],"mappings":";AAAA;;AAEA,SAAQA,KAAK,EAAEC,QAAQ,QAAO,kBAAkB;AAChD,SAAQC,OAAO,QAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,SAAS,GAAGC,IAAA,IAAwC;EAAA,IAAvC;IAACC,QAAQ;IAAEC,aAAa;IAAE,GAAGC;EAAI,CAAC,GAAAH,IAAA;EACjD,oBACIF,OAAA,CAACJ,KAAK;IAAA,GACES,IAAI;IACRC,MAAM,EACFC,KAAA;MAAA,IAAC;QAACC;MAAQ,CAAC,GAAAD,KAAA;MAAA,OAAKH,aAAa,GAAID,QAAQ,gBACrCH,OAAA,CAACH,QAAQ;QACLY,EAAE,EAAE;UACAC,QAAQ,EAAE,QAAQ;UAClBC,KAAK,EAAE;YAACC,IAAI,EAAEJ;UAAQ;QAC1B;MAAE;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CACJ;IAAA;EACJ;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAAAC,EAAA,GAhBKhB,SAAS;AAkBf,MAAMiB,eAAe,GAAGC,KAAA;EAAA,IAAC;IAACC;EAAO,CAAC,GAAAD,KAAA;EAAA,OAAK;IACnCf,aAAa,EAAEgB,OAAO,CAAChB;EAC3B,CAAC;AAAA,CAAC;AAEF,eAAeN,OAAO,CAACoB,eAAe,CAAC,CAACjB,SAAS,CAAC;AAAC,IAAAgB,EAAA;AAAAI,YAAA,CAAAJ,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}